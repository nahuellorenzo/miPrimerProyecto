Grids trabaja con matrices es como una evolucion de tablas

Por lo genereal se aplica grid con flexbox
si le aplicamos el grid al padre se le va a aplicar al hijo


display:grid se me adapta cada div al div padre 
grid-template-columns: 200px 100px quiero que una columna tenga 200px y la otra 100px osea voy a tener dos columnas si pongo otro valores mas sumo otras columnas
tambien se puede poner con porcentaje los valores si pongo 50% 50% voy a tener dos columnas del 50% del espacio del contenedor total del padre

FR es una medida que mide en base a una fraccion del total del contenedor del padre
grid-template-columns: 1fr 2fr 3fr
grid-template-rows: 2fr 1fr 3fr la primer fila va a medir 2fr la segunda 1fr y la tercera 3fr

grid-templeate-areas:
' cajita1 cajita1 cajita1 cajita2'
' cajita3 cajita3 cajita4 cajita5'
' cajita3 cajita3 cajita4 cajita5'

.cajita1{
	grida area:cajita1
}

voy a definir asi que cajita 1 ocupe una fila y 3 columnas y cajita 3 por ejemplo cajita 3 va a ocupar 2 columnas y 2 filas esos son los valores que pongo en el grid-template-area y despues para que eso se le asigne a mi contenedor elijo la clase del contenedor y pongo grid area: "el valor que defini en el padre"

grid-column-gap: 10px
grid-row-gap: 10px es el espacio entre cada cajita es como margin ponele

en grid se pueden acomodar los elementos con justify y el align
justify-items: end los hijos se van al final de la columna (adapta los elementos horizontalmente)

align-items: start
todo esto se le asigna al contendor padre como en flexbox

las propiedades que vienen a continuacion se le asignan ahora a los hijos y no a los padres 
justify-self
align-self: end me lo lleva al final al hijo pero como dentro de otro contenedor 

place-items: center; es una propiedad de grid que te centra en el medio del contenedor  teniendo en cuenta el eje horizontal y el eje vertical como si usaras flexbox 
